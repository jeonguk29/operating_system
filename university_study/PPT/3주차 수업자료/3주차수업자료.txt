메모 영어에서 +or 붙이면 사람이 되는거 처럼

프로세스 : 메모리에 로드되어 주기적으로 cpu에 의해 처리되는 소프트웨어
프로세서 : 명령을 실행 (처리)하는 하드웨어
ex CPU, MCU는 대부분의 전자제품에 채용돼 전자제품의 두뇌역할을 하는 핵심칩 ex 냉장고, 
AP (스마트폰ㆍ디지털 TV 등에 사용되는 비메모리 반도체로 일반 컴퓨터의 중앙처리장치(CPU)와 같은 역할을 한다.)

프로세스 관리중 문맥교환이란 
p1 ->    | cpu |
p2 ->    | p4   |-----> p0
p3 ->    |       |

프로세스를 순서대로 왔다갔다cpu에게 전달해주는거 (운영체제가 해줌)
스케줄링 (중요순서대로 시간 할당함)

인터럽트 처리란 : ex 마우스 키보드 클릭같은거 입력 출력 들어오면 우선 처리 해주는거 


프로그램에 프로세스 변환 
: 운영체제로 부터 프로세스 제어 블록을 얻는 다는 뜻 
운영체제는 프로세스 각각에 대한 정보 관리를 통해 프로세스를 관리한다. 
이런 프로세스에 대한 정보는 프로세스 제어 블록(PCB : Process Control Block)이라는 테이블에 저장된다. 
임의의 프로세스가 생성되면 이 프로세스의 정보를 저장하는 새로운 프로세스 제어 블록이 생성되고, 이 프로세스가 종료될 때 같이 사라진다.


RAM             
                   
   컴퓨터 키면 운영체제가 RAM일정부분 차지          OS영역    |
    PCB-PCB-PCB-PCB (여러개에 소프트웨가 있거임 그걸 위한 제어블럭들임 사용자 데이터도 여기에 저장됨 즉 하드디스크에 |
	저장되어있는 프로그램을 불러오면 운영체제가 PCB 생성후 램에 프로세서 등록됨 PCB에 사용자가 프로세스 가지고 하는 정보들이 저장됨

   하드에서 여기로 프로그램 올라오면 프로세스       sw 영역   |
   사용자 영역 안에 sw영역이 있는거임 사용자가 불어야 올라오는거니까				<==========   |           하드디스크             |


SW생성시 PCB 하나얻음 
                   

PID : 프로세스 마다 각 ID로 관리

포인터 : 다음 PCB 어디 있는지 저장

PPID와 CPID 
			O -----------------이 첫번째는 os가 만듬 부팅될때 (최상위 프로세스 라고도함)
		|               |
		O             O  -------PPID     
           |          |       |       |
          O         O      O      O  -----PID  : 모든 PID는 하나의 부모 PPID만 가지고 있음 자식은 여러개 가질수 있음 모든 프로세들이 이런관계를 가짐
			  |      |   |    |
                                   O--CPID O  ------> CPID 

참고 블로그 너무 정리 잘함 운영체제 전반적인 내용을 
https://velog.io/@chappi/OS%EB%8A%94-%ED%95%A0%EA%BB%80%EB%8D%B0-%ED%95%B5%EC%8B%AC%EB%A7%8C-%ED%95%A9%EB%8B%88%EB%8B%A4.-2%ED%8E%B8-%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4%EC%99%80-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8#


프로세스 상태에서 어떠한 작업 과정중 키보드 같은 입력 들어오면 실행 잠시 어디다 보관해야함 : 대기상태로 
입출력을 실행에 둬야함 즉 위부 입력같은건 대기상태에서 들어올때 마다 처리 


보류 대기는 : 브라우저 인터넷 연결 안될때 뜨는 거 생각
보류 준비는 메모리 부족시 



-----------------------------------------
4주차 정리 

https://blog.naver.com/kut_da_92/222683046333    프로세스, 스레드 개념 차이 정리 





5주차 정리

시그널도 ipc중 하나임 저번 실습시간에 sleep 멈추고 실행한거
파이프 : 한쪽 프로세스 결과물을 다른 프로세승 쏴주는거 

프로세스 내부 통신이란 

프로세스     |
	        |
int main()    | 
  		        결과적으로 이렇게 안에 어떻게 돌던 리턴제로 쓰레드 (실타레) 는 하나임 
	||	|
	V	|
retrun 0;	|



프로세스     |
	        |
int main()    | 
  		        이렇게 여러개 해줄수도 있음 (별도 쓰레드 줘서 돌아가겠금)
 ||  ||	||	|	같은 프로세스 안에 있어서 쓰레드간에 통신 가능 
 V  V	V	|	ex 전역변수
retrun 0;	|



파이프 , 메세지 큐 는 큐구조임  먼저온게 먼저나가는 선입 선출

6p보면 일단 로컬에서 사용가능한 ipc 기능들만 모아 놓은거임 

| 이게 파이프 명령임 


공유메모리 란

OS	   	공유메모리 id|      이런식으로 공요 메모리 안에 id가 있는데 이런 것들을 통해서 해당영역에 들어오게 해줌               
			     ^	^
			     |	|	그럼 각프로세스는 자신에 메모리 처럼 사용하는거임 
프로세스1	|  ---------	|
		|		|
프로세스2	|  ------------      




교착 및 기아상태 중요 시험문제 나옴
https://reakwon.tistory.com/56 
실습 참조 


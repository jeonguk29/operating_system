하드도 주변장치임
램에서 cpu가 데이터를 가져와서 필수장치

즉  램도 저장장치인데 외부저장 장치에 포함X 
+ 데이터 접근 단위 워드 (ex 초 분 처럼)

 
시스템 아키텍처(구조) 예시

| cpu |           | 		 Ram               |                   | 운영체제 |  
                   |  |text area == code area | |	
		   |  | data area                  | | 


만약 소스코드 a = b + c 가 있으면 운영체제는 이 실행코드를 램으로 보넴 

| cpu |     <3.b+c 계산좀 해줘  ---     | 		 Ram                        |          <1.----     | 운영체제 |  
                   				|  | 2. a = b + c 이렇게 변수가 들어감| |	
		4. 값 가져옴----------- ->|  |      값     	                       | | 

값이 들어가있는 data area만 계속 바뀜 변수 부분은 공간이 잡혀있는거라 그안에 들어가있는 값이 변경되도 text area 영향 x
+ 운영체제도 컴터킬때 소프트웨어라 Ram으로 감 소스코드도 하드에 있다가 실행코드만 램으로 가는것임 
=> 폰노이만 구조는 ----- 이게 버스인데  버스가 하나라 빠르게 전달이 힘듬 계선 된게 => 하버드 아키텍처  (코드가 하나가 아니라 여러줄이면 하나하나 오가는게 아니라 바로바로 오감
명령어 메모리, 데이터 메모리가 분리되어 있어서 

폰노이만 장점 버스하나라 저렴
단점 버스가 하나라 통신원할하게 안될가능성 있음

+추가 팁  post : power on self test 컴터키자마자함 
여담 : 메모리가 크다면 부팅할때 오히려 시간이 좀걸림 

프로세스란? : https://terms.naver.com/entry.naver?docId=3532866&cid=58528&categoryId=58528


아케텍처(구조) 위에 내용 (시험)






클럭 틱 : -----|__|--|_____|------------  ---이게 클럭 |  | 이게 틱 ex 심박수 테스트기 생각하면 이해쉬움

fsb바스는 눈에보임

bsb는 안보임 (숨겨져있음)

구체적 설명은 아래 참조
https://search.naver.com/search.naver?sm=tab_hty.top&where=nexearch&query=fsb++bsb&oquery=Front-Side+Bus&tqi=hBcDOwprvTossjYNS8Cssssssj8-460024


cache란   cpu안에 들어있음  cpu와 RAM에 상호작용더 원활하게 하기위해 케시에 필요한걸 몽땅 저장함 RAM에서 일부를 때와서 
+여담 이 cashe메모리 적어도 상관 없는게 ex c언어 소스 아무리 길어도 평균 100~200줄 나옴
즉 미리 캐시에서  |text area | 를 보고 (0,1,2,3,4,5) 주소만 가져오면 되겠다! 생각하고 긁어 오는거임 
그래서 케시 사양 낮아도 괜찮음 충분하기 때문에 막 엄청 좋은걸 써도 특정한 작업들 아니면 낭비임 
그래서 다시 cpu 작업하다 필요한 정보 없으면 잠시 cpu대기시키고 케시 다 비우고 다시 필요한 부분 긁어옴 



| cpu  |           | 		 Ram               |                   | 운영체제 |  
| cache|  <==  |  |text area == code area | |	
		    |  | data area                  | | 

읽어보면 메우 유익함 
https://zion830.tistory.com/46




 주소 버스는 단반향임 중요!!

참고 https://ko.wikipedia.org/wiki/%EA%B8%B0%EC%96%B5_%EC%9E%A5%EC%B9%98_%EC%A3%BC%EC%86%8C_%EB%A0%88%EC%A7%80%EC%8A%A4%ED%84%B0

 
운영체제 큰틀 정리 좋은 자료
https://blog.naver.com/leejjin_/222015843340


 



 

 
-------------------------
2장 

지금은 휘발성이 램  비휘발성이 롬( 우리가 쓰는 렘 aka 시금치 렘은 SDRAM임)


인터럽트란?
https://ko.wikipedia.org/wiki/%EC%9D%B8%ED%84%B0%EB%9F%BD%ED%8A%B8
 

버퍼의 대표적 예시 케시

스풀러 없으면 한글에서 프린트 누르면 끝날때까지 다른 작업 못함


 

저장장치 계층구조 시험


인터럽트에서 직접 메모리 접근 하는 DMS는 요즘 그레픽 카드가 이 기법 많이 사용함

| cpu |           |  Ram    |                   
                   	
			ㅅ
		 	||
		   |     DMA   |
			ㅅ
			||
		그레픽 카드


-----------------------------

3장

https://terms.naver.com/entry.naver?docId=2424059&cid=51399&categoryId=51399 
스레드란?

 
병렬처리 정리
https://blog.naver.com/brandon1018/222034838485

상호의존성이 없어야 한다는 게 무쓴 말이냐면

A: 볶음밥 만들건데 우리 새우가 부족해 B야 새우좀 줘
B: 그래 oo

이게 안된다는 말임 
A와 B는 각각 놀아야함 

처리시간 동일해야하는게 
A : 디저트 만듬                    => 디저트가 메인메뉴조리가 늦어서 먼저나옴 이러면 안된다는거임 
B : 메인메뉴임 



파이프라인 기법 쓰는게 RISC


요즘 이걸 많이씀 ex 애플도 m1 이거에 포함됨

인텔은CISC




 

 
